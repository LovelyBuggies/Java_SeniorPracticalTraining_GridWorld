package KingCrab.src;
import java.awt.Color;
import java.util.ArrayList;
import info.gridworld.actor.*;
import info.gridworld.grid.*;
import info.gridworld.world.*;
import info.gridworld.actor.Critter;
import info.gridworld.gui.*;

public class KingCrabCritter extends CrabCritter 
{
    /**
     * process the actor
     * @param    actor array
     */
     public void processActors(ArrayList<Actor> actors) {
          Grid gr = getGrid();
          int[] direc = {Location.HALF_LEFT, Location.NORTH, Location.HALF_RIGHT};
          Location loc = getLocation();

          for (Actor a : actors) {
            // move to the direc0 location
             if (a.getLocation().equals(loc.getAdjacentLocation(getDirection() + direc[0]))) {
                 Location tmp_loc = a.getLocation().getAdjacentLocation(getDirection() + direc[0]);
                 if(gr.isValid(tmp_loc) && gr.get(tmp_loc) == null) {
                    a.moveTo(tmp_loc);
                  } 
                  else {
                    a.removeSelfFromGrid();
                  }
              } 
              // move to the direc1 location
              else if (a.getLocation().equals(loc.getAdjacentLocation(getDirection() + direc[1]))) {
                 Location tmp_loc = a.getLocation().getAdjacentLocation(getDirection() + direc[1]);
                 if(gr.isValid(tmp_loc) && gr.get(tmp_loc) == null) {
                    a.moveTo(tmp_loc);
                  } 
                  else {
                    a.removeSelfFromGrid();
                  }
              } 
              // move to the direc2 location
              else if (a.getLocation().equals(loc.getAdjacentLocation(getDirection() + direc[2]))) {
                 Location tmp_loc = a.getLocation().getAdjacentLocation(getDirection() + direc[2]);
                 if(gr.isValid(tmp_loc) && gr.get(tmp_loc) == null) {
                    a.moveTo(tmp_loc);
                  } 
                  else {
                    a.removeSelfFromGrid();
                  }
              }  
          }
     }
}